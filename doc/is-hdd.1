.TH IS-HDD 1 "April 2023" "snaplogger 1.x" "User Commands"
.SH NAME
is-hdd \- Check what type of drive a file resides on
.SH SYNOPSIS
.B is-hdd
[\fIOPTION\fR] <filename>
.SH DESCRIPTION
This command checks the type of drive the specified file resides on. It
can either be a hard disk drive (also called a rotational drive) or a
solid state drive.

<filename> can be any existing regular file or directory. Special files,
such as `/dev/random', may not function as expected and retyrb an error.

The simplest to know the result is to test the exit code:

.TP
0
means it is an HDD,
.TP
1
means it is an SSD
.TP
2
means that an error occurred (i.e. the file does not exist).
In case of an error, an error message is also printed in stderr.

.PP
To get a message, instead of just an exit code, use the \-\-verbose (\-v)
command line option. In that case, the tool either writes "rotational"
(for the HDD case) or "solid state" (for the SDD case).

The command is easy to use if you want to test whether a file is on an
HDD device:

    if is-hdd /file/name
    then
        # case taken if /file/name exists and is on an HDD
        ...
    fi

.SH "COMMAND LINE OPTIONS"
.TP
\fB\-\-build\-date\fR
Display the date and time when the tool was last built.

.TP
\fB\-\-command\-help\fR
List the commands understood by `snaplogger'.

.TP
\fB\-\-compiler\-version\fR
Output the version information of the C++ compiler used to compile the
`advgetopt' library. In most cases, this is the same as the compiler used
to compile the `snaplogger' tool.

.TP
\fB\-\-configuration\-filenames\fR
List the filename of each configuration file that the `snaplogger' reads on
startup. \fBWARNING:\fR this does not include the zones that
get loaded later in the process.

.TP
\fB\-\-console\fR
Print the logs out to the console. This overrides the logger configuration
files.

.TP
\fB\-C\fR, \fB\-\-copyright\fR
Print out the copyright notice of the `snaplogger' tool.

.TP
\fB\-\-debug\fR
Change the logger severity to the `debug' level. This command line option
changes the level of all the appenders configured for `snaplogger'.

.TP
\fB\-\-environment\-variable\-name\fR
Print the name of the variable to the console. This variable can be used
to enter options instead of writing them on the command line or the
configuration file. Commands are not allowed in the environment variable.

.TP
\fB\-\-force\-severity\fR \fIlevel\fR
Change the logger severity to this specific level. This new level is
applied to all the defined appenders. The level is changed whether it
is higher or lower than the current appender's level.

.TP
\fB\-\-has\-sanitizer\fR
Print whether this version was compiled with the C++ compiler sanitizer.

.TP
\fB\-h\fR, \fB\-\-help\fR
Print a brief document about the tool usage, then exit.

.TP
\fB\-L\fR, \fB\-\-license\fR
Print out the license of `snaplogger' and exit.

.TP
\fB--list-appenders\fR
List the available appenders as used by the logger.

.TP
\fB\-\-list\-severities\fR
List the available severities as used by the logger.

.TP
\fB\-\-log\-component\fR \fIname\fR...
Define one or more component name to filter the logs. Only logs with that
component are output, others are ignored. You can use the `!' (exclamation
mark) character in front of a name to exclude logs with that component.

.TP
\fB\-\-log\-config\fR \fIfilename\fR
Only load this very configuration file to setup the logger.

.TP
\fB\-\-log\-config\-path\fR \fIpath\fR
Define a path to search for log configuration files instead of using the
defaults.

.TP
\fB\-\-log\-file\fR \fIfilename\fR
Save the logs in this specific file instead of what is defined in the
configuration files.

.TP
\fB\-\-log\-severity\fR \fIlevel\fR
Change the severity to this level unless the appender already accepts logs
for a lower level. So for example, an appender setup to output logs with a
severity level of `error' or higher is affected by the `warning' level.
An appender setup to output logs with a severity level of `info' does not
changed when setting this command line option to `warning'.

.TP
\fB\-\-logger\-configuration\-filenames\fR
List the files that the logger reads to be setup. If no files are found,
then messages appear in the console by default.

.TP
\fB\-\-logger\-hide\-banner\fR
Request that the logger does not print the banner in the console. This is
particularly useful for command line tools (opposed to a service). The
`snaplogger' tool automatically turns this option on.

.TP
\fB\-\-logger\-plugin\-paths\fR
This option allows you to change the path(s) to the snaplogger plugins. You
can enter multiple paths by separating them with a colon (:).

.TP
\fB\-\-logger\-show\-banner\fR
Request that the logger prints its banner when it starts. This is useful
if you run the tool from a service and want to make sure the administrator
knows which version of the tool is being used.

.TP
\fB\-\-logger\-version\fR
Print out the version of the Snap! Logger and exit.

.TP
\fB\-\-no\-log\fR
Turn off the logger so nothing gets printed out. This is somewhat similar
to a quiet or silent option that many Unix tools offer.

.TP
\fB\-\-option\-help\fR
Print the list of options supported by `ipwall'.

.TP
\fB\-\-path\-to\-option\-definitions\fR
Option definitions can be defined in a .ini file. If it exists, this is the
path where it can be found.

.TP
\fB\-\-print\-option\fR \fIname\fR
This option is useful to debug your command line, environment variable, and
configuration files by printing the value of the named option. This tells
you what value the tool or service sees in the end.

.TP
\fB\-\-show\-option\-sources\fR
The `advgetopt' library has the ability to trace where each value is
read from: which file, the command line, the environment variable.
This option can be used to determine where a value is defined, which once
in a while is particularly useful.

.TP
\fB\-\-syslog\fR [\fIidentity\fR]
Send the logs to the system `syslog'. If specified, the `identity' is used
along each message.

.TP
\fB\-\-trace\fR
Change the logger severity to the TRACE level. All appenders accept all the
logs that they receive.

.TP
\fB-v\fR, \fB\-\-verbose\fR
Print out the type of device: "rotational" for an HDD or "solid state" for
an SSD or any other type of irrotational drives.

.TP
\fB\-V\fR, \fB\-\-version\fR
Print the `snaplogger' version number, then exit.

.SH KNOWN BUGS
On VPS, all devices are marked as rotational, even static state drives.
There is no alternative at the moment than your own knowledge to avoid
this error (i.e. you need to know and thus a script won't properly detect
the type of device on its own).

.SH AUTHOR
Written by Alexis Wilke <alexis@m2osw.com>.
.SH "REPORTING BUGS"
Report bugs to <https://github.com/m2osw/snaplogger/issues>.
.br
snaplogger home page: <https://snapwebsites.org/project/snaplogger>.
.SH COPYRIGHT
Copyright \(co 2022-2024  Made to Order Software Corp.  All Rights Reserved
.br
License: GPLv3
.br
This is free software: you are free to change and redistribute it.
.br
There is NO WARRANTY, to the extent permitted by law.
.SH "SEE ALSO"
.BR shredlog (1)
